apiVersion: v1
kind: Namespace
metadata:
  name: main-ns
  labels:
    name: main-ns
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
    pod-security.kubernetes.io/enforce-version: v1.26
    pod-security.kubernetes.io/audit-version: v1.26
    pod-security.kubernetes.io/warn-version: v1.26
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: main-ns
  name: simple-webapp-role
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simple-webapp-sa
  namespace: main-ns
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: simple-webapp-rolebinding
  namespace: main-ns
subjects:
- kind: ServiceAccount
  name: simple-webapp-sa
  apiGroup: ""
roleRef:
  kind: Role
  name: simple-webapp-role
  apiGroup: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-webapp-main
  namespace: main-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: simple-webapp-main
  template:
    metadata:
      labels:
        app: simple-webapp-main
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - minikube-m02
      automountServiceAccountToken: true
      containers:
        - name: main-application
          image: nginx # use digest
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 1001
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: cache-volume
              mountPath: /var/cache/nginx
            - name: pid-volume
              mountPath: /var/run
            - name: shared-logs
              mountPath: /var/log/nginx
          resources:
            limits:
              cpu: "1.5"
              memory: 1024Mi
      volumes:
        - name: cache-volume
          emptyDir: {}
        - name: pid-volume
        - name: shared-logs
          emptyDir: {}
        - name: secrets
          secret:
            secretName: simple-webapp-secret
---
apiVersion: v1
kind: ConfigMap
data:
  CONFIG_OBJECT: CONFIG_MAP_OBJECT
metadata:
  name: simple-webapp-config-map
  namespace: main-ns
---
apiVersion: v1
kind: Secret
data:
  secret: eyAicGFzc3dvcmQiOiAibm90LXNhZmUtd2l0aC1iYXNlNjQifQ==
metadata:
  name: simple-webapp-secret
  namespace: main-ns
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: simple-webapp-main
  namespace: main-ns
spec:
  ports:
  - port: 80
    protocol: TCP
    nodePort: 31000
  selector:
    app: simple-webapp
  type: NodePort
