# Default deny
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: deny-app-policy
spec:
  namespaceSelector: has(projectcalico.org/name) && projectcalico.org/name not in {"kube-system", "calico-system", "calico-apiserver"}
  types:
  - Ingress
  - Egress
  egress:
  # Allow all namespaces to communicate to DNS pods
  - action: Allow
    protocol: UDP
    destination:
      selector: 'k8s-app == "kube-dns"'
      ports:
      - 53
  ingress:
  # This rule allows coredns to forward dns requests back
  # through the worker node in the case where your gateway is
  # colocated with the Kubernetes master
  - action: Allow
    protocol: UDP
    destination:
      ports:
      - 53
---
# Allow ping on all nodes
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-ping
spec:
  selector: has(kubernetes-host)
  ingress:
    - action: Allow
      protocol: ICMP
---
# Control plane
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: ingress-k8s-control-plane
spec:
  selector: has(node-role.kubernetes.io/control-plane)
  ingress:
  # This rule allows ingress to the Kubernetes API server.
  - action: Allow
    protocol: TCP
    destination:
      ports:
      # - 6443
      - 8443 # Minikube defaults to this port
  # This rule is required in multi-master clusters where etcd pods are colocated with the masters.
  # Allow the etcd pods on the masters to communicate with each other. 2380 is the etcd peer port.
  # This rule also allows the masters to access the kubelet API on other masters (including itself).
  - action: Allow
    protocol: TCP
    source:
      selector: has(node-role.kubernetes.io/control-plane)
    destination:
      ports:
      - 2380
      - 10250
  # This rule allows all traffic to localhost.
  # - action: Allow
  #   destination:
  #     nets:
  #     - 127.0.0.0/8
---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: ingress-k8s-workers
spec:
  selector: has(node-role.kubernetes.io/worker)
  ingress:
  # Kubelet API
  - action: Allow
    protocol: TCP
    # Allow only control-plane to access to node's Kubelet.
    source:
      selector: has(node-role.kubernetes.io/control-plane)
    destination:
      ports:
      - 10250
  # # Allow all traffic to localhost.
  # - action: Allow
  #   destination:
  #     nets:
  #     - 127.0.0.0/8
